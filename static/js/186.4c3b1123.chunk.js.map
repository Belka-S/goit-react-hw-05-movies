{"version":3,"file":"static/js/186.4c3b1123.chunk.js","mappings":"kOAwCA,UAnCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,IAAWH,EAASI,UAapC,OAXAC,EAAAA,EAAAA,YAAU,WACR,OAAO,WAAM,wCACX,uGAC6BC,EAAAA,EAAAA,IAAkBJ,GAD/C,OACQK,EADR,OAEQC,GAAcC,EAAAA,EAAAA,IAAiBF,EAAaG,SAClDb,EAAWW,GACXT,EAAaS,EAAYG,OAAS,GAJpC,4CADW,uBAAC,WAAD,wBAOXC,EACD,CACF,GAAE,CAACV,KAEF,8BACIJ,GAGA,wBACGF,EAAQiB,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACX,2BACE,wBAAKD,KACL,uBAAIC,MAFGD,EADE,OAHf,sEAaP,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { fetchMovieReviews } from 'servises/movieApi';\nimport { getMovieId, normalizeReviews } from 'servises/normalize';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isReviews, setIsReviews] = useState(false);\n  const location = useLocation();\n  const movieId = getMovieId(location.pathname);\n\n  useEffect(() => {\n    return () => {\n      async function fetch() {\n        const movieReviews = await fetchMovieReviews(movieId);\n        const normReviews = normalizeReviews(movieReviews.results);\n        setReviews(normReviews);\n        setIsReviews(normReviews.length > 0);\n      }\n      fetch();\n    };\n  }, [movieId]);\n  return (\n    <>\n      {!isReviews ? (\n        <p>We don't have any reviews for this movie.</p>\n      ) : (\n        <ul>\n          {reviews.map(({ author, content }) => (\n            <li key={author}>\n              <h4>{author}</h4>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["useState","reviews","setReviews","isReviews","setIsReviews","location","useLocation","movieId","getMovieId","pathname","useEffect","fetchMovieReviews","movieReviews","normReviews","normalizeReviews","results","length","fetch","map","author","content"],"sourceRoot":""}